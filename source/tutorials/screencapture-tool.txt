============================
Automated Screencapture Tool
============================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Introduction
------------

We have developed a tool which automatically captures and updates
screenshots for various documentation repositories. The goal
of this tool is to make it easier to incorporate screenshots into our
documentation and ultimately benefit our readers by providing more
visual aids to remove ambiguity when referring to UI elements and
provide additional clarity when listing out steps for lengthy
procedures.

Screencapture scripts for web-based tools such as Atlas and Charts are
written using `NightmareJS <https://github.com/segmentio/nightmare>`_
and scripts for Compass are written using
`MochaJS <https://mochajs.org/>`_.

Writing Screencapture Scripts
-----------------------------

Refer to either

- :doc:`Writing NightmareJS Scripts </tutorials/screencapture-tool-nightmare>`
  for web-based tools (i.e. Atlas and Charts) or

- :doc:`Writing MochaJS Scripts for Compass </tutorials/screencapture-tool-mocha>`

for details and examples for writing each type of screencapture script.

Editing the Makefile to Include Screencapture Scripts
-----------------------------------------------------

Once you have completed writing a screencapture script, you must
add it to the list of scripts in the ``screenshots`` section of
the Makefile to have it run as part of the ``make screenshots``
command.

By default, the ``make screenshots`` command runs all screenshot scripts
listed in the Makefile. To only have the command run specific
screenshot scripts, comment out the scripts which should not be run.

.. example::

   The following ``screenshots`` command of the Makefile only runs the
   ``build-new.js`` script:

   .. code-block:: sh

      screenshots:
          @echo "Running screenshot tool"
          rm -rf cloud-screenshots-temp
          mkdir cloud-screenshots-temp
          # node screenshot-tool/screenshot-scripts/atlas-connect.js
          # node screenshot-tool/screenshot-scripts/atlas-metrics.js
          # node screenshot-tool/screenshot-scripts/create-cluster.js
          node screenshot-tool/screenshot-scripts/build-new.js
          # node screenshot-tool/screenshot-scripts/atlas-alert.js


Running the Screencapture Tool
------------------------------

.. include:: /includes/fact-screencapture-npm-install.rst

After installing the required packages, from the **root directory**
of the repository run the following command to run the screenshot tool:

.. code-block:: sh

   make screenshots

.. note::

   The tool's browser does not have to be visible on your machine to
   run. The script still runs effectively when minimized. For details
   on showing or hiding the browser instance, refer to the
   meta-documentation page for writing your specific script type.

Troubleshooting and Best Practices
----------------------------------

- If Atlas is unable to login with the credentials provided in your
  ``.properties.ini`` file in the ``Makefile`` command, and that the
  file exists in the ``screenshot-scripts`` directory of your
  repository. Also ensure that the credentials match the Atlas
  environment you are connecting to.

- In the event you run a screencapture script, update the original image,
  and re-run the script and the script still shows a high mismatch
  percentage, check the following:

  - The original image was actually replaced, and the image in
    ``source/images`` was updated as expected.

  - If there are any timestamps in the image which may be updating
    each time the screenshot is taken.

  - If there are any *transitions* in the UI which might cause the
    content to be captured at slightly different locations on the page.
    If this is the case, consider adding a slightly longer ``wait()``
    time before capturing the page.

  - The image analysis file placed in the ``screenshots-temp`` folder.

- When the captured image has large dimensions, consider using the
  `scale <http://docutils.sourceforge.net/docs/ref/rst/directives.html#figure>`_
  option in the reStructuredText to cleanly scale down the image to fit
  in the document pane.

  .. example::

     The following example scales ``picture.png`` down by 50%:

     .. code-block:: sh

        .. figure:: picture.png
           :scale: 50 %

- Inpsecting an element in a browser will provide an option to copy
  the CSS selector, which is useful when specifying a
  selector in the screenshot script.

.. cssclass:: hidden

   .. toctree::
      :titlesonly:

      /tutorials/screencapture-tool-nightmare
      /tutorials/screencapture-tool-mocha


